name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Check for Frontend Changes
        id: changed_files
        run: |
          if [ $(git rev-list --count HEAD) -lt 2 ]; then
            echo "frontend_changed=false" >> $GITHUB_ENV
          else
            if git diff --name-only HEAD^ HEAD | grep -q '^frontend/'; then
              echo "frontend_changed=true" >> $GITHUB_ENV
            else
              echo "frontend_changed=false" >> $GITHUB_ENV
            fi
          fi
      
      - name: Log in to Docker Hub
        if: env.frontend_changed == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        if: env.frontend_changed == 'true'
        run: |
          docker build -t mikhailgorodilov/travel-planner-webapp:latest ./frontend/travel-planner-webapp
          docker push mikhailgorodilov/travel-planner-webapp:latest

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Check for Backend Changes
        id: changed_files
        run: |
          if [ $(git rev-list --count HEAD) -lt 2 ]; then
            echo "backend_changed=false" >> $GITHUB_ENV
          else
            if git diff --name-only HEAD^ HEAD | grep -q '^backend/'; then
              echo "backend_changed=true" >> $GITHUB_ENV
            else
              echo "backend_changed=false" >> $GITHUB_ENV
            fi
          fi
      
      - name: Log in to Docker Hub
        if: env.backend_changed == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Docker Image
        if: env.backend_changed == 'true'
        run: |
          docker build -t mikhailgorodilov/travel-planner-api:latest ./backend/travel-planner-api
          docker push mikhailgorodilov/travel-planner-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Pulumi
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin

      - name: Pulumi Login
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: pulumi login

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Pulumi install dependencies
        working-directory: ./infrastructure
        run: yarn

      - name: Pulumi Up (Deploy Resources)
        working-directory: ./infrastructure
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PULUMI_CONFIG_DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          PULUMI_CONFIG_API_JWT_SECRET_KEY: ${{ secrets.API_JWT_SECRET_KEY }}
          PULUMI_CONFIG_API_ACCESS_TOKEN_EXPIRATION: ${{ vars.API_ACCESS_TOKEN_EXPIRATION }}
          PULUMI_CONFIG_API_REFRESH_TOKEN_EXPIRATION: ${{ vars.API_REFRESH_TOKEN_EXPIRATION }}
        run: pulumi up --yes --stack prod
